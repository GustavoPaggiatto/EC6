/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lpii02;

import LPII02.Business.Services.AccessGroupBusiness;
import LPII02.Business.Services.UserBusiness;
import LPII02.Domain.Entities.AccessGroup;
import LPII02.Domain.Entities.User;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Eleni Oliveira
 */
public class JFProfile extends javax.swing.JInternalFrame {

    private UserBusiness _userBusiness = new UserBusiness();

    private boolean _isLoad = false;

    /**
     * Creates new form JFProfile
     */
    String imagePth = null;
    private String _imgType = null;
    private BufferedImage _image = null;

    public JFProfile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItemDelete = new javax.swing.JMenuItem();
        lblPerNome = new javax.swing.JLabel();
        lblPerLogin = new javax.swing.JLabel();
        lblPerSenha = new javax.swing.JLabel();
        lblPerGAcesso = new javax.swing.JLabel();
        txtPerPesquisar = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPerLogin = new javax.swing.JTextField();
        cboPerGAcesso = new javax.swing.JComboBox<AccessGroup>();
        lblPerAvatar = new javax.swing.JLabel();
        lblPerAvatarImg = new javax.swing.JLabel();
        btnPerAdd = new javax.swing.JButton();
        btnPerAlterar = new javax.swing.JButton();
        btnPerExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnPerPesquisar = new javax.swing.JButton();
        btnPerAvatar = new javax.swing.JButton();
        txtPerSenha = new javax.swing.JPasswordField();

        jMenuItemDelete.setText("Delete");
        jMenuItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemDelete);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Perfil de Usu√°rio");
        setPreferredSize(new java.awt.Dimension(1228, 502));
        addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                formHierarchyChanged(evt);
            }
        });

        lblPerNome.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPerNome.setText("Nome:");

        lblPerLogin.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPerLogin.setText("Login:");

        lblPerSenha.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPerSenha.setText("Senha:");

        lblPerGAcesso.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPerGAcesso.setText("Grupo de Acesso:");

        txtPerPesquisar.setPreferredSize(new java.awt.Dimension(7, 26));
        txtPerPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerPesquisarActionPerformed(evt);
            }
        });
        txtPerPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPerPesquisarKeyReleased(evt);
            }
        });

        txtName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        txtName.setPreferredSize(new java.awt.Dimension(7, 26));

        txtPerLogin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        txtPerLogin.setPreferredSize(new java.awt.Dimension(7, 26));

        cboPerGAcesso.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cboPerGAcesso.setPreferredSize(new java.awt.Dimension(7, 26));

        lblPerAvatar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPerAvatar.setText("Avatar:");

        lblPerAvatarImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnPerAdd.setBackground(new java.awt.Color(230, 230, 230));
        btnPerAdd.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnPerAdd.setText("Adicionar");
        btnPerAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPerAdd.setPreferredSize(new java.awt.Dimension(73, 32));
        btnPerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerAddActionPerformed(evt);
            }
        });

        btnPerAlterar.setBackground(new java.awt.Color(230, 230, 230));
        btnPerAlterar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnPerAlterar.setText("Alterar");
        btnPerAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPerAlterar.setPreferredSize(new java.awt.Dimension(99, 32));
        btnPerAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerAlterarActionPerformed(evt);
            }
        });

        btnPerExcluir.setBackground(new java.awt.Color(230, 230, 230));
        btnPerExcluir.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnPerExcluir.setText("Excluir");
        btnPerExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPerExcluir.setPreferredSize(new java.awt.Dimension(99, 32));
        btnPerExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerExcluirActionPerformed(evt);
            }
        });

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Login", "Grupo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.setComponentPopupMenu(jPopupMenu1);
        tblUsuarios.setFocusable(false);
        tblUsuarios.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblUsuarios.setSelectionForeground(new java.awt.Color(0, 120, 215));
        tblUsuarios.setShowHorizontalLines(false);
        tblUsuarios.setShowVerticalLines(false);
        tblUsuarios.getTableHeader().setReorderingAllowed(false);
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        btnPerPesquisar.setBackground(new java.awt.Color(230, 230, 230));
        btnPerPesquisar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnPerPesquisar.setText("Pesquisar");
        btnPerPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPerPesquisar.setPreferredSize(new java.awt.Dimension(69, 32));
        btnPerPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerPesquisarActionPerformed(evt);
            }
        });

        btnPerAvatar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnPerAvatar.setText("...");
        btnPerAvatar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerAvatarActionPerformed(evt);
            }
        });

        txtPerSenha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        txtPerSenha.setPreferredSize(new java.awt.Dimension(7, 26));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPerGAcesso)
                                .addGap(18, 18, 18)
                                .addComponent(cboPerGAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPerLogin)
                                    .addComponent(lblPerNome)
                                    .addComponent(lblPerSenha))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPerLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPerSenha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(lblPerAvatar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnPerAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnPerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPerAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPerExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPerPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPerPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPerAvatarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPerAvatarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPerNome)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPerAvatar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblPerLogin)
                                    .addComponent(txtPerLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPerAvatar)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPerSenha)
                            .addComponent(txtPerSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPerGAcesso)
                            .addComponent(cboPerGAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPerAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnPerExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPerAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPerPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPerPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        setBounds(0, 0, 731, 502);
    }// </editor-fold>//GEN-END:initComponents

    private void loadGroups() throws InstantiationException, IllegalAccessException {
        AccessGroupBusiness acBusiness = new AccessGroupBusiness();
        List<AccessGroup> groups = new ArrayList<AccessGroup>();
        AccessGroup ag = acBusiness.getInstance();

        ag.setId(0);
        ag.setName("Selecione");

        groups.add(ag);
        groups.addAll(acBusiness.get());

        DefaultComboBoxModel<AccessGroup> model = new DefaultComboBoxModel<AccessGroup>(groups.toArray(new AccessGroup[]{}));
        this.cboPerGAcesso.setModel(model);
        model.setSelectedItem(groups.get(0));
    }


    private void formHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formHierarchyChanged

        if (this._isLoad) {
            return;
        }

        try {
            this.loadGroups();
            FillData();
            this._isLoad = true;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                    null,
                    "Ocorreu um erro durante o carregamento do formul√°rio, tente novamente.",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_formHierarchyChanged

    private void FillData() {

        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Id");
        dtm.addColumn("Nome");
        dtm.addColumn("Grupo de Acesso");

        for (User user : this._userBusiness.findAll()) {
            dtm.addRow(new Object[]{user.getId(), user.getName(), user.getAccessGroup()});
        }
        this.tblUsuarios.setModel(dtm);
    }

    public void set_fields() {

        try {
            int index = this.tblUsuarios.getSelectedRow();
            int codigo = (int) this.tblUsuarios.getValueAt(index, 0);
            User user = this._userBusiness.get(codigo);
            this.txtName.setText(user.getName());
            this.txtPerSenha.setText(String.valueOf(user.getPassword()));
            user.setPassword(String.valueOf(txtPerSenha.getPassword()));
            this.txtPerLogin.setText(user.getLogin());
            this.cboPerGAcesso.setSelectedItem(user.getAccessGroup());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

//        int set = tblUsuarios.getSelectedRow();
//        txtName.setText(tblUsuarios.getModel().getValueAt(set, 1).toString());
//        txtPerLogin.setText(tblUsuarios.getModel().getValueAt(set, 2).toString());
//        //txtPerSenha.setText(tblUsuarios.getModel().getValueAt(set, 3).toString());
//        cboPerGAcesso.setSelectedItem(tblUsuarios.getModel().getValueAt(set, 4).toString());
//       // cboPerGAcesso.setSelectedItem(tblUsuarios.getValueAt(set, 4).toString());
//
//        Image Avatar = ((ImageIcon) tblUsuarios.getValueAt(set, 5)).getImage();
//        // Image Avatar = ((ImageIcon)tblUsuarios.getValueAt(set,5)).getImage().lblPerAvatarImg.getScaleInstance();
//        ImageIcon img = new ImageIcon(Avatar);
//
//        lblPerAvatarImg.setIcon(img);
//        btnPerAdd.setEnabled(false);
    }


    private void btnPerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerAddActionPerformed
        // TODO add your handling code here:
        try {
            User user = this._userBusiness.getInstance();
            user.setName(txtName.getText());
            user.setLogin(txtPerLogin.getText());
            user.setPassword(String.valueOf(txtPerSenha.getPassword()));
            user.setAccessGroup((AccessGroup) this.cboPerGAcesso.getSelectedItem());
            byte[] img = null;

//            try {
//                Path pth = Paths.get(imagePth);
//                img = Files.readAllBytes(pth);
//                //user.setAvatar(img);
//            } catch (Exception ex) {
//                Logger.getLogger(JFProfile.class.getName()).log(Level.SEVERE, null, ex);
//            }
            this._userBusiness.insert(user);
//           
            JOptionPane.showMessageDialog(
                    null,
                    "Cadastro efetuado com sucesso!",
                    "Info.",
                    JOptionPane.INFORMATION_MESSAGE);
            FillData();

            txtName.setText(null);
            txtPerLogin.setText(null);
            txtPerSenha.setText(null);
            cboPerGAcesso.setSelectedItem(null);
            lblPerAvatarImg.setText(null);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPerAddActionPerformed

    private void btnPerPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerPesquisarActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btnPerPesquisarActionPerformed

    private void btnPerExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerExcluirActionPerformed

        try {
            if (JOptionPane.showConfirmDialog(
                    this,
                    "Deseja realmente excluir a mat√©ria?",
                    "Confirma√ß√£o",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE) == 0) {
                int index = this.tblUsuarios.getSelectedRow();
                int codigo = (int) this.tblUsuarios.getValueAt(index, 0);
                User user = this._userBusiness.get(codigo);
                this._userBusiness.delete(user);
                FillData();
                txtName.setText(null);
                txtPerLogin.setText(null);
                txtPerSenha.setText(null);
                cboPerGAcesso.setSelectedItem(null);
                lblPerAvatarImg.setText(null);
                JOptionPane.showMessageDialog(
                        null,
                        "Exclus√£o efetuada com sucesso!",
                        "Info.",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnPerExcluirActionPerformed

    public ImageIcon resizePic(String picPath, byte[] BLOBpic, int wdth, int hgt) {

        ImageIcon myImg;
        if (picPath != null) {
            myImg = new ImageIcon(picPath);
        } else {
            myImg = new ImageIcon(BLOBpic);
        }

        Image img = myImg.getImage().getScaledInstance(wdth, hgt, Image.SCALE_SMOOTH);
        ImageIcon myPicture = new ImageIcon(img);
        return myPicture;

    }

    private void btnPerAvatarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerAvatarActionPerformed
        // TODO add your handling code here:
        String path = "";
        JFileChooser filec = new JFileChooser();
        filec.setCurrentDirectory(new File(System.getProperty("user.home")));

        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("*.Images", "jpg", "png", "gif");
        filec.addChoosableFileFilter(fileFilter);
        int fileState = filec.showSaveDialog(null);

        if (fileState == JFileChooser.APPROVE_OPTION) {
            File selectedFile = filec.getSelectedFile();

            path = selectedFile.getAbsolutePath();
            // imagePth = path;

            lblPerAvatarImg.setIcon(resizePic(path, null, lblPerAvatarImg.getWidth(), lblPerAvatarImg.getHeight()));
            // lblPerAvatarImg.setIcon(new ImageIcon(path));
            //lblPerAvatarImg.setIcon(resizePic(path));
        } else if (fileState == JFileChooser.CANCEL_OPTION) {
            // System.out.println("No Image Selected");
        }
    }//GEN-LAST:event_btnPerAvatarActionPerformed

    private void txtPerPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPerPesquisarKeyReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_txtPerPesquisarKeyReleased

    private void txtPerPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerPesquisarActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        // TODO add your handling code here:
        set_fields();
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnPerAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerAlterarActionPerformed

        try {
            User user = this._userBusiness.getInstance();
            user.setName(this.txtName.getText());
            user.setLogin(this.txtPerLogin.getText());
            if (!String.valueOf(this.txtPerSenha.getPassword()).isEmpty());
            user.setPassword(String.valueOf(this.txtPerSenha.getPassword()));
            // user.setPassword(txtPerSenha.getText());
            user.setAccessGroup((AccessGroup) this.cboPerGAcesso.getSelectedItem());
            this._userBusiness.update(user);
            FillData();

            txtName.setText(null);
            txtPerLogin.setText(null);
            txtPerSenha.setText(null);
            cboPerGAcesso.setSelectedItem(null);
            lblPerAvatarImg.setText(null);

            //message success...
            JOptionPane.showMessageDialog(
                    null,
                    "Altera√ß√£o efetuada com sucesso!",
                    "Info.",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPerAlterarActionPerformed

    private void jMenuItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPerAdd;
    private javax.swing.JButton btnPerAlterar;
    private javax.swing.JButton btnPerAvatar;
    private javax.swing.JButton btnPerExcluir;
    private javax.swing.JButton btnPerPesquisar;
    private javax.swing.JComboBox<AccessGroup> cboPerGAcesso;
    private javax.swing.JMenuItem jMenuItemDelete;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPerAvatar;
    private javax.swing.JLabel lblPerAvatarImg;
    private javax.swing.JLabel lblPerGAcesso;
    private javax.swing.JLabel lblPerLogin;
    private javax.swing.JLabel lblPerNome;
    private javax.swing.JLabel lblPerSenha;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPerLogin;
    private javax.swing.JTextField txtPerPesquisar;
    private javax.swing.JPasswordField txtPerSenha;
    // End of variables declaration//GEN-END:variables
}
