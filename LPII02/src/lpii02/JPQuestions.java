/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lpii02;

import Components.ButtonColumn;
import LPII02.Business.Services.DifficultyBusiness;
import LPII02.Business.Services.MatterBusiness;
import LPII02.Business.Services.QuestionBusiness;
import LPII02.Domain.Entities.Difficulty;
import LPII02.Domain.Entities.Matter;
import LPII02.Domain.Entities.Question;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Gustavo
 */
public class JPQuestions extends javax.swing.JPanel {

    private QuestionBusiness _qBusiness = new QuestionBusiness();
    private int _page = 1;
    private int _qtdPerPage = 10;
    private boolean _loadPassed = false;

    /**
     * Creates new form JPQuestions
     */
    public JPQuestions() {
        initComponents();

        this.grQuestions.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                valueRowChanged(e);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfImage = new javax.swing.JFileChooser();
        jpScroll = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taEnunciated = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        taAnwser = new javax.swing.JTextArea();
        cbMatters = new javax.swing.JComboBox<Matter>();
        cbDifficulties = new javax.swing.JComboBox<Difficulty>();
        jSeparator1 = new javax.swing.JSeparator();
        btnFindImage = new javax.swing.JButton();
        txtFileImage = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        grQuestions = new javax.swing.JTable();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jpScroll.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jpScrollHierarchyChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel1.setText("Matéria:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("Dificuldade:");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setText("Enunciado:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Resposta:");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setText("Imagem (Auxiliar):");

        taEnunciated.setColumns(20);
        taEnunciated.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        taEnunciated.setRows(5);
        jScrollPane1.setViewportView(taEnunciated);

        taAnwser.setColumns(20);
        taAnwser.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        taAnwser.setRows(5);
        jScrollPane2.setViewportView(taAnwser);

        cbMatters.setFont(new java.awt.Font("Century Gothic", 0, 12));

        cbDifficulties.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnFindImage.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnFindImage.setText("Procurar");

        txtFileImage.setEditable(false);
        txtFileImage.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        grQuestions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Matéria", "Dificuldade", "Enunciado", "Alternativas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(grQuestions);
        if (grQuestions.getColumnModel().getColumnCount() > 0) {
            grQuestions.getColumnModel().getColumn(4).setMinWidth(100);
        }

        btnLast.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnLast.setText(">>");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnNext.setText(">");

        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBack.setText("<");

        btnFirst.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnFirst.setText("<<");

        btnNew.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnNew.setText("Nova");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnInsert.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnInsert.setText("Cadastrar");

        btnEdit.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnEdit.setText("Editar");

        btnDelete.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnDelete.setText("Excluir");

        javax.swing.GroupLayout jpScrollLayout = new javax.swing.GroupLayout(jpScroll);
        jpScroll.setLayout(jpScrollLayout);
        jpScrollLayout.setHorizontalGroup(
            jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpScrollLayout.createSequentialGroup()
                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpScrollLayout.createSequentialGroup()
                        .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpScrollLayout.createSequentialGroup()
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpScrollLayout.createSequentialGroup()
                                            .addGap(67, 67, 67)
                                            .addComponent(jLabel1))
                                        .addGroup(jpScrollLayout.createSequentialGroup()
                                            .addGap(52, 52, 52)
                                            .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel3)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)
                                    .addComponent(cbMatters, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbDifficulties, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jpScrollLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFindImage, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFileImage)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpScrollLayout.createSequentialGroup()
                        .addGap(0, 72, Short.MAX_VALUE)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addGap(68, 68, 68)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpScrollLayout.createSequentialGroup()
                        .addComponent(btnFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast)))
                .addContainerGap())
        );
        jpScrollLayout.setVerticalGroup(
            jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpScrollLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jpScrollLayout.createSequentialGroup()
                        .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpScrollLayout.createSequentialGroup()
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(cbMatters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cbDifficulties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtFileImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFindImage, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnNew)
                                .addComponent(btnInsert)
                                .addComponent(btnEdit)
                                .addComponent(btnDelete))
                            .addGroup(jpScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnLast)
                                .addComponent(btnNext)
                                .addComponent(btnBack))
                            .addComponent(btnFirst))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        this.clearControls();
    }//GEN-LAST:event_btnNewActionPerformed

    private void jpScrollHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jpScrollHierarchyChanged
        if (this._loadPassed) {
            return;
        }

        try {
            this.loadMatters();
            this.loadDifficulties();
            this.loadTable();

            this._loadPassed = true;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                    null,
                    "Ocorreu um erro ao carregar os dados necessários, tente novamente.",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jpScrollHierarchyChanged

    private void clearControls() {
        this.cbMatters.setSelectedIndex(0);
        this.cbDifficulties.setSelectedIndex(0);
        this.taEnunciated.setText("");
        this.taAnwser.setText("");
        this.txtFileImage.setText("");
    }

    private void loadTable() {
        List<Question> questions = this._qBusiness.get();

        if (questions.size() > this._qtdPerPage) {
            questions = questions.subList((this._page - 1) * this._qtdPerPage, this._qtdPerPage);
        }

        if (questions != null) {
            DefaultTableModel dtm = (DefaultTableModel) this.grQuestions.getModel();

            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }

            Action act = new AbstractAction() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    //open alternatives jPanel...
                }
            };

            for (Question q : questions) {
                dtm.addRow(new Object[]{
                    q.getId(),
                    q.getMatter().getName(),
                    q.getDifficulty().getDescription(),
                    q.getEnunciated(),
                    "Alternativas"
                });
            }

            ButtonColumn btnColumn = new ButtonColumn(grQuestions, act, 4);
        }
    }

    private void loadMatters() throws IllegalAccessException, InstantiationException {
        MatterBusiness matterBusiness = new MatterBusiness();
        List<Matter> matters = new ArrayList<Matter>();
        Matter def = matterBusiness.getInstance();

        def.setId(0);
        def.setName("Selecione");

        matters.add(def);
        matters.addAll(matterBusiness.get());

        DefaultComboBoxModel<Matter> model = new DefaultComboBoxModel<Matter>(matters.toArray(new Matter[]{}));
        this.cbMatters.setModel(model);
    }

    private void loadDifficulties() throws IllegalAccessException, InstantiationException {
        DifficultyBusiness difBusiness = new DifficultyBusiness();
        List<Difficulty> diffs = new ArrayList<Difficulty>();
        Difficulty def = difBusiness.getInstance();

        def.setId(0);
        def.setDescription("Selecione");

        diffs.add(def);
        diffs.addAll(difBusiness.get());

        DefaultComboBoxModel<Difficulty> model = new DefaultComboBoxModel<Difficulty>(diffs.toArray(new Difficulty[]{}));
        this.cbDifficulties.setModel(model);
    }

    private void valueRowChanged(ListSelectionEvent e) {
        if (this.grQuestions.getSelectedRows() == null
                || this.grQuestions.getSelectedRows().length == 0) {
            return;
        }
        int selectedRow = this.grQuestions.getSelectedRows()[0];
        Question question = this._qBusiness.get(Integer.parseInt(this.grQuestions.getValueAt(selectedRow, 0).toString()));

        if (question != null) {
            this.txtFileImage.setText("Carregamento via Base de Dados");
            this.taAnwser.setText(question.getAnswer());
            this.taEnunciated.setText(question.getEnunciated());
            ComboBoxModel<Matter> cbMatModel = this.cbMatters.getModel();
            ComboBoxModel<Difficulty> cbDifModel = this.cbDifficulties.getModel();
            int i = 0;

            for (; i < cbMatModel.getSize(); i++) {
                Matter mi = cbMatModel.getElementAt(i);

                if (mi.getId() == question.getMatter().getId()) {
                    this.cbMatters.setSelectedIndex(i);
                    break;
                }
            }

            for (i = 0; i < cbDifModel.getSize(); i++) {
                Difficulty di = cbDifModel.getElementAt(i);

                if (di.getId() == question.getDifficulty().getId()) {
                    this.cbDifficulties.setSelectedIndex(i);
                    break;
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFindImage;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JComboBox<Difficulty> cbDifficulties;
    private javax.swing.JComboBox<Matter> cbMatters;
    private javax.swing.JTable grQuestions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JFileChooser jfImage;
    private javax.swing.JPanel jpScroll;
    private javax.swing.JTextArea taAnwser;
    private javax.swing.JTextArea taEnunciated;
    private javax.swing.JTextField txtFileImage;
    // End of variables declaration//GEN-END:variables
}
